name: Deploy to Elastic Beanstalk

on:
  push:
    branches:
      - main

permissions:
  id-token: write
  contents: read

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Configure AWS Credentials
        id: aws-creds
        uses: aws-actions/configure-aws-credentials@v3
        with:
          role-to-assume: arn:aws:iam::730335337132:role/learn-beanstalk-role
          aws-region: "ca-central-1"

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.9

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Ensure Elastic Beanstalk Application Exists
        run: |
          aws elasticbeanstalk describe-applications --application-names "HelloWorldApp" --region ca-central-1 || \
          aws elasticbeanstalk create-application \
            --application-name "HelloWorldApp" \
            --region ca-central-1

      - name: Package Application for Deployment
        run: |
          zip -r app.zip .
          aws s3 cp app.zip s3://elasticbeanstalk-ca-central-1-$(aws sts get-caller-identity --query Account --output text)/app.zip

      - name: Create New Application Version
        run: |
          aws elasticbeanstalk create-application-version \
            --application-name "HelloWorldApp" \
            --version-label ${{ github.sha }} \
            --source-bundle S3Bucket="elasticbeanstalk-ca-central-1-$(aws sts get-caller-identity --query Account --output text)",S3Key="app.zip"

      - name: Deploy to Elastic Beanstalk Environment
        run: |
          ENV_NAME="HelloWorldEnvironment"
          STACK_NAME="64bit Amazon Linux 2023 v4.3.1 running Python 3.12"
          OPTIONS_FILE="options.json"

          # Create Environment if it doesn't exist
          if ! aws elasticbeanstalk describe-environments \
              --application-name "HelloWorldApp" \
              --environment-names "$ENV_NAME" \
              --region ca-central-1 | grep -q '"Status": "Ready"'; then
            aws elasticbeanstalk create-environment \
              --application-name "HelloWorldApp" \
              --environment-name "$ENV_NAME" \
              --solution-stack-name "$STACK_NAME" \
              --version-label "${{ github.sha }}" \
              --option-settings file://$OPTIONS_FILE
          else
            # Update Existing Environment
            aws elasticbeanstalk update-environment \
              --environment-name "$ENV_NAME" \
              --version-label "${{ github.sha }}"
          fi

      - name: Clean Up
        run: |
          rm -f app.zip
