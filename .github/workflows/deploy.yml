name: Deploy to Elastic Beanstalk

on:
  push:
    branches:
      - main

permissions:
  id-token: write
  contents: read

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Configure AWS Credentials
        id: aws-creds
        uses: aws-actions/configure-aws-credentials@v3
        with:
          role-to-assume: arn:aws:iam::730335337132:role/learn-beanstalk-role
          aws-region: "ca-central-1"

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.9

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Zip Application Files
        run: |
          zip -r app.zip . -x "*.git*"

      - name: Upload Application to S3
        run: |
          ACCOUNT_ID=$(aws sts get-caller-identity --query Account --output text)
          S3_BUCKET="elasticbeanstalk-ca-central-1-${ACCOUNT_ID}"
          aws s3 cp app.zip s3://${S3_BUCKET}/app-${{ github.sha }}.zip
          echo "S3_BUCKET=${S3_BUCKET}" >> $GITHUB_ENV

      - name: Create Elastic Beanstalk Application (if not exists)
        run: |
          aws elasticbeanstalk describe-applications --region ca-central-1 \
          --query "Applications[?ApplicationName=='HelloWorldApp']" --output text || \
          aws elasticbeanstalk create-application --application-name "HelloWorldApp" --region ca-central-1

      - name: Create New Application Version
        run: |
          aws elasticbeanstalk create-application-version \
            --application-name "HelloWorldApp" \
            --version-label "${{ github.sha }}" \
            --source-bundle S3Bucket=${{ env.S3_BUCKET }},S3Key=app-${{ github.sha }}.zip

      - name: Create or Update Elastic Beanstalk Environment
        run: |
          ENV_NAME="HelloWorldEnvironment"
          STACK_NAME="64bit Amazon Linux 2023 v4.3.1 running Python 3.12"

          # Check if environment exists
          aws elasticbeanstalk describe-environments \
            --application-name "HelloWorldApp" \
            --environment-names "${ENV_NAME}" \
            --query "Environments[?Status=='Ready']" --output text || ENV_EXISTS=false

          if [ -z "$ENV_EXISTS" ]; then
            echo "Creating Elastic Beanstalk Environment..."
            aws elasticbeanstalk create-environment \
              --application-name "HelloWorldApp" \
              --environment-name "${ENV_NAME}" \
              --solution-stack-name "${STACK_NAME}" \
              --version-label "${{ github.sha }}" \
              --option-settings file://options.json
          else
            echo "Updating Elastic Beanstalk Environment..."
            aws elasticbeanstalk update-environment \
              --environment-name "${ENV_NAME}" \
              --version-label "${{ github.sha }}"
          fi

      - name: Final Summary
        run: |
          echo "Deployment Complete: Version ${{ github.sha }} deployed to Elastic Beanstalk."
